<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="CONTRIBUTING_8md" kind="file" language="Markdown">
    <compoundname>CONTRIBUTING.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>Contribution<sp/>Guide:<sp/>Quick<sp/>Start</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Table<sp/>of<sp/>Contents</highlight></codeline>
<codeline><highlight class="normal">1.<sp/>[Getting<sp/>Started](#getting-started)</highlight></codeline>
<codeline><highlight class="normal">2.<sp/>[Development<sp/>Workflow](#development-workflow)</highlight></codeline>
<codeline><highlight class="normal">3.<sp/>[Coding<sp/>Standards](#coding-standards)</highlight></codeline>
<codeline><highlight class="normal">4.<sp/>[Building<sp/>and<sp/>Testing](#building-and-testing)</highlight></codeline>
<codeline><highlight class="normal">5.<sp/>[Documentation](#documentation)</highlight></codeline>
<codeline><highlight class="normal">6.<sp/>[Pull<sp/>Requests](#pull-requests)</highlight></codeline>
<codeline><highlight class="normal">7.<sp/>[Docker<sp/>and<sp/>VS<sp/>Code<sp/>Integration](#docker-and-vs-code-integration)</highlight></codeline>
<codeline><highlight class="normal">8.<sp/>[Quick<sp/>Command<sp/>Reference](#quick-command-reference)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Getting<sp/>Started</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Branch<sp/>Naming<sp/>Convention</highlight></codeline>
<codeline><highlight class="normal">Create<sp/>a<sp/>new<sp/>branch<sp/>for<sp/>your<sp/>work<sp/>using<sp/>one<sp/>of<sp/>the<sp/>following<sp/>prefixes:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`feat/`:<sp/>For<sp/>new<sp/>features</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`bugfix/`:<sp/>For<sp/>bug<sp/>fixes</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`hotfix/`:<sp/>For<sp/>critical<sp/>bug<sp/>fixes<sp/>that<sp/>need<sp/>immediate<sp/>attention</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`chore/`:<sp/>For<sp/>maintenance<sp/>tasks</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`sandbox/`:<sp/>For<sp/>experimental<sp/>work<sp/>or<sp/>testing</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Example:<sp/>`feat/add-user-authentication`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Avoid<sp/>working<sp/>directly<sp/>on<sp/>the<sp/>`main`<sp/>branch.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Commit<sp/>Message<sp/>Convention</highlight></codeline>
<codeline><highlight class="normal">Use<sp/>clear,<sp/>descriptive<sp/>commit<sp/>messages<sp/>following<sp/>this<sp/>format:</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">&lt;type&gt;:<sp/>&lt;description&gt;</highlight></codeline>
<codeline><highlight class="normal">[optional<sp/>body]</highlight></codeline>
<codeline><highlight class="normal">[optional<sp/>footer]</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Allowed<sp/>types:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`feat`:<sp/>A<sp/>new<sp/>feature</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`fix`:<sp/>A<sp/>bug<sp/>fix</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`chore`:<sp/>Routine<sp/>tasks,<sp/>maintenance,<sp/>or<sp/>refactors</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`docs`:<sp/>Documentation<sp/>changes</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`test`:<sp/>Adding<sp/>or<sp/>modifying<sp/>tests</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`refactor`:<sp/>Code<sp/>changes<sp/>that<sp/>neither<sp/>fix<sp/>a<sp/>bug<sp/>nor<sp/>add<sp/>a<sp/>feature</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`style`:<sp/>Changes<sp/>that<sp/>do<sp/>not<sp/>affect<sp/>the<sp/>meaning<sp/>of<sp/>the<sp/>code<sp/>(white-space,<sp/>formatting,<sp/>etc.)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`ci`:<sp/>Changes<sp/>to<sp/>CI<sp/>configuration<sp/>files<sp/>and<sp/>scripts</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`build`:<sp/>Changes<sp/>that<sp/>affect<sp/>the<sp/>build<sp/>system<sp/>or<sp/>external<sp/>dependencies</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Development<sp/>Workflow</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Pre-Commit<sp/>Hooks</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Automatic<sp/>checks<sp/>run<sp/>on<sp/>each<sp/>commit:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>Code<sp/>formatting</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>Commit<sp/>message<sp/>validation</highlight></codeline>
<codeline><highlight class="normal">-<sp/>To<sp/>manually<sp/>format<sp/>code:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>```</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>make<sp/>format</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>```</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>This<sp/>applies<sp/>Google<sp/>style<sp/>formatting<sp/>to<sp/>your<sp/>code.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>New<sp/>Class<sp/>Creation</highlight></codeline>
<codeline><highlight class="normal">Use<sp/>the<sp/>provided<sp/>script<sp/>to<sp/>create<sp/>new<sp/>classes:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">./createClass.sh<sp/>&lt;subfolder&gt;<sp/>&lt;className&gt;</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Example:</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">./createClass.sh<sp/>logger<sp/>LoggerManager</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>will:</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Create<sp/>a<sp/>`.hpp`<sp/>file<sp/>in<sp/>`include/&lt;subfolder&gt;/`</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Create<sp/>a<sp/>`.cpp`<sp/>file<sp/>in<sp/>`src/&lt;subfolder&gt;/`</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Generate<sp/>a<sp/>class<sp/>with<sp/>default<sp/>constructor,<sp/>destructor,<sp/>copy<sp/>constructor,<sp/>copy<sp/>assignment<sp/>operator,<sp/>and<sp/>Doxygen<sp/>documentation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Coding<sp/>Standards</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Naming<sp/>Conventions</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Class<sp/>Names:<sp/>PascalCase<sp/>(e.g.,<sp/>`UserManager`)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Function<sp/>Names:<sp/>camelCase,<sp/>start<sp/>with<sp/>a<sp/>verb<sp/>(e.g.,<sp/>`getUserById()`)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Variable<sp/>Names:<sp/>camelCase<sp/>(e.g.,<sp/>`userCount`)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Constants:<sp/>ALL_CAPS<sp/>with<sp/>underscores<sp/>(e.g.,<sp/>`MAX_USERS`)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Private<sp/>Member<sp/>Variables:<sp/>Prefix<sp/>with<sp/>`m_`<sp/>followed<sp/>by<sp/>camelCase<sp/>(e.g.,<sp/>`m_userCount`)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Enum<sp/>Names:<sp/>PascalCase<sp/>for<sp/>enum<sp/>name,<sp/>ALL_CAPS<sp/>for<sp/>values</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Namespace<sp/>Names:<sp/>lowercase<sp/>(e.g.,<sp/>`namespace<sp/>utils<sp/>{}`)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Building<sp/>and<sp/>Testing</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Compilation</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">make<sp/>all</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Running<sp/>the<sp/>Project</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">make<sp/>run</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Static<sp/>Analysis</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">make<sp/>cppcheck</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Memory<sp/>Checks</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">make<sp/>leak</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Comprehensive<sp/>Check</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">make<sp/>strict</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">This<sp/>runs<sp/>both<sp/>static<sp/>analysis<sp/>and<sp/>memory<sp/>checks.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Pull<sp/>Requests</highlight></codeline>
<codeline><highlight class="normal">1.<sp/>Ensure<sp/>all<sp/>tests<sp/>pass,<sp/>code<sp/>is<sp/>properly<sp/>formatted<sp/>and<sp/>documented</highlight></codeline>
<codeline><highlight class="normal">2.<sp/>Open<sp/>a<sp/>Pull<sp/>Request<sp/>(PR)<sp/>when<sp/>your<sp/>work<sp/>is<sp/>ready<sp/>for<sp/>review</highlight></codeline>
<codeline><highlight class="normal">3.<sp/>Provide<sp/>a<sp/>clear<sp/>description<sp/>of<sp/>the<sp/>changes<sp/>in<sp/>your<sp/>PR</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Docker<sp/>and<sp/>VS<sp/>Code<sp/>Integration</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Building<sp/>Docker<sp/>Image</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">docker<sp/>build<sp/>-t<sp/>template<sp/>.</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Running<sp/>Container</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">docker<sp/>run<sp/>-it<sp/>--rm<sp/>-v<sp/>~/.ssh:/root/.ssh<sp/>-v<sp/>~/.zshrc:/root/.zshrc<sp/>template</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>VS<sp/>Code<sp/>Setup</highlight></codeline>
<codeline><highlight class="normal">1.<sp/>Press<sp/>`Cmd<sp/>+<sp/>P`<sp/>(or<sp/>`Ctrl<sp/>+<sp/>P`<sp/>on<sp/>Windows/Linux)</highlight></codeline>
<codeline><highlight class="normal">2.<sp/>Type<sp/>`&gt;<sp/>Reopen<sp/>in<sp/>Container`</highlight></codeline>
<codeline><highlight class="normal">3.<sp/>Select<sp/>the<sp/>appropriate<sp/>container<sp/>configuration</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Quick<sp/>Command<sp/>Reference</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">|<sp/>Command<sp/>|<sp/>Description<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|---------|-------------|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>`make<sp/>all`<sp/>|<sp/>Compile<sp/>the<sp/>project<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>`make<sp/>run`<sp/>|<sp/>Run<sp/>the<sp/>project<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>`make<sp/>format`<sp/>|<sp/>Format<sp/>the<sp/>code<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>`make<sp/>cppcheck`<sp/>|<sp/>Run<sp/>static<sp/>analysis<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>`make<sp/>leak`<sp/>|<sp/>Perform<sp/>memory<sp/>checks<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>`make<sp/>strict`<sp/>|<sp/>Run<sp/>full<sp/>check<sp/>(static<sp/>analysis<sp/>+<sp/>memory<sp/>checks)<sp/>|</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Happy<sp/>coding!</highlight></codeline>
    </programlisting>
    <location file="docs/CONTRIBUTING.md"/>
  </compounddef>
</doxygen>
